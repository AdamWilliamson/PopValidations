::Validators Wanted::

IsLengthInclusivelyBetween
	Takes a string, or array. 
HasExclusiveLengthBetween
	Takes a string, or array. 

Email Validator
	Microsoft apprived email rules are sufficient

MatchesRegularExpression
	takes a regular Expression, string must match

IsPolymorphic
	Takes a list of types, incoming value must be convertible to this type
	Can restrict to classes.

IsConvertableTo
	takes a string or object.  Proves the incoming value is convertable
	Nullable fields are tricky. Must be allowed as input. But can fail conversion to non-nullable entities.

ScalePrecision
	Takes a decimal, or nullable decimal.
	Decimal must have matching scale and precision. 

IsOneOf
	Matches item against a list of those items.
	May need to be IComparable

IsJson
	String/Object must be parsable to json.

MatchesJsonSchema
	string/object must match Json Schema.

IsUrl
	takes string, checks if valid url format.


Switch
	Example:
	.Switch(s => s
		.Case(
			field => field is string {length: > 0},
			"Field must be greater than 0 length"
		)
		.Case(
			scopedData.To(data => data is not null),
			"Field must not be null"
		)
	)

**
Ensure validators for string comparison allow Cultural Selection and String comparison settings.

Aggregate Validators
	Compare Each
	CompareTo X
	IsOrdered(IOrderer)